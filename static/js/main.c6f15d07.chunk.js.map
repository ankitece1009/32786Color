{"version":3,"sources":["Canvas.js","index.js"],"names":["Canvas","props","state","colors","createColor","myRef","React","createRef","this","fillCanvas","arr","red","green","blue","i","obj","push","canvas","current","x","y","ctx","getContext","length","fillStyle","width","fillRect","style","border","ref","height","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAsEeA,E,kDAlEX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAEDC,MAAQ,CACVC,OAAO,EAAKC,eAEf,EAAKC,MAAQC,IAAMC,YANL,E,gEAUdC,KAAKC,e,oCAON,IAHC,IAAIC,EAAM,GACNC,EAAM,EAAGC,EAAO,EAChBC,EAAO,EACJC,EAAG,EAAEA,EAAE,IAAMA,IAAI,CACrB,IAAIC,EAAM,GAcV,GAbAA,EAAIJ,IAAMA,EACVI,EAAIH,MAAQA,EACZG,EAAIF,KAAOA,EACZH,EAAIM,KAAKD,IACRF,GAAQ,GACE,MACNA,EAAO,EACPD,GAAS,GAEVA,EAAQ,MACPA,EAAQ,EACRD,GAAO,GAERA,EAAM,IACL,MAGR,OAAOD,I,mCAON,IAJA,IAAMO,EAAST,KAAKH,MAAMa,QACtBC,EAAG,EAAIC,EAAI,EACHV,EAAOF,KAAKN,MAAnBC,OACCkB,EAAMJ,EAAOK,WAAW,MACtBR,EAAI,EAAEA,EAAEJ,EAAIa,OAAOT,IAE3BO,EAAIG,UAAJ,cAAuBd,EAAII,GAAGH,IAA9B,YAAqCD,EAAII,GAAGF,MAA5C,YAAqDF,EAAII,GAAGD,KAA5D,MACAM,GAAK,IACEF,EAAOQ,QACVN,EAAG,EAAGC,GAAK,GAEfC,EAAIK,SAASP,EAAEC,EAAE,EAAE,K,+BAOnB,OACI,qCACA,kDACA,wBAAQO,MAAO,CAACC,OAAO,mBAAoBC,IAAKrB,KAAKH,MAAQoB,MAAO,IAAMK,OAAQ,c,GA9DzExB,IAAMyB,WCG3BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c6f15d07.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass Canvas extends React.Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n    \r\n        this.state = {\r\n           colors:this.createColor()\r\n        }\r\n        this.myRef = React.createRef();\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.fillCanvas();\r\n    }\r\n    \r\n    createColor(){\r\n        let arr = [];\r\n        let red = 0, green= 0  ;\r\n        let blue = 0;\r\n       for(var i =1;i<40000;i++){\r\n           let obj = {}\r\n           obj.red = red;\r\n           obj.green = green;\r\n           obj.blue = blue;\r\n          arr.push(obj);\r\n           blue += 8;\r\n           if(blue > 256){\r\n               blue = 0;\r\n               green += 8;\r\n           }\r\n           if(green > 256){\r\n               green = 0;\r\n               red += 8;\r\n           }\r\n           if(red > 256){\r\n               break;\r\n           }\r\n       }\r\n       return arr;\r\n    }\r\n    fillCanvas(){\r\n        const canvas = this.myRef.current;\r\n        let x =0 , y = 0;\r\n        let {colors:arr} = this.state;\r\n        const ctx = canvas.getContext('2d');\r\n        for(let i = 0;i<arr.length;i++){\t\r\n           \r\n        ctx.fillStyle = `rgb(${arr[i].red},${arr[i].green},${arr[i].blue})`;\r\n        x += 8;\r\n        if(x>= canvas.width){\r\n            x =0; y += 8;\r\n        }\r\n        ctx.fillRect(x,y,7,7);\r\n        \r\n        }\r\n    }\r\n\r\n    render() {\r\n       \r\n        return (\r\n            <>\r\n            <h1>35937 RGB Colors</h1>\r\n            <canvas style={{border:\"1px solid black\"}} ref={this.myRef}  width={1000} height={2310}/>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Canvas;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Canvas from './Canvas';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Canvas />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}